
import itertools


# table
# 6 5 5 8 6 6 9 8 36
# 2 3 2 4 7 3 7 2 15
# 5 2 9 6 4 3 3 3 18
# 8 1 1 1 7 2 5 4 24
# 8 9 8 2 1 5 5 7 8
# 7 6 1 2 9 8 9 6 15
# 6 8 4 5 2 9 9 4 38
# 9 7 8 5 3 3 2 9 41
# 44 20 18 24 26 20 23 20 +




table = [
    [6,5,5,8,6,6,9,8],
    [2,3,2,4,7,3,7,2],
    [5,2,9,6,4,3,3,3],
    [8,1,1,1,7,2,5,4],
    [8,9,8,2,1,5,5,7],
    [7,6,1,2,9,8,9,6],
    [6,8,4,5,2,9,9,4],
    [9,7,8,5,3,3,2,9]
]

table_flip = [
    [6,2,5,8,8,7,6,9],
    [5,3,2,1,9,6,8,7],
    [5,2,9,1,8,1,4,8],
    [8,4,6,1,2,2,5,5],
    [6,7,4,7,1,9,2,3],
    [6,3,3,2,5,8,9,3],
    [9,7,3,5,5,9,9,2],
    [8,2,3,4,7,6,4,9]
]

row_sums = [36, 15, 18, 24, 8, 15, 38, 41]
col_sums = [44, 20, 18, 24, 26, 20, 23, 20]

def combinations_to_sum(numbers, val):
    return [seq
        for i in range(len(numbers), 0, -1) for seq in itertools.combinations(numbers, i) if sum(seq) == val
    ]


print(combinations_to_sum(table[0], 36))

print(6 in combinations_to_sum(table[0], 36)[0])




